body {
    /* Some browsers (like Chrome) include a small margin around the <body> by
      default. Our application doesn't need this margin (we would like the UI to
      extend all the way to the top and bottom of the screen), so we remove this
      margin below.
    */
    margin: 0px;
    padding: 0px;
  
    /* Set the default font family and font color for our application. */
    font-family: 'Roboto', sans-serif;
    color: #dddddd;
  
    /* Set the background color (dark mode UI!) */
    background-color: #fff;
  }
  
  /* ---------- CONTAINER ----------------------------------------------------- */
  
  /* The #container div holds all of elements. This makes responsive designs
      easier to implement, since we can resize the container and many of the
      child elements will adapt automatically. In our design, the header and
      footer are both children of the #container div, though this is not always
      the case in practice (some web designers choose to have these elements
      outside of the container).
  */
  #container {
    /* By default, our container is 490px wide. (We will change this for larger
      screens, see @media query below. */
    width: 490px;
  
    /* Set top and bottom margins to 0px. Set left and right margins to "auto",
      which will center our container div within the page. */
    margin: 0px auto;
  
    /* padding: 0px 20px; */
  }
  
  /* For screens that have a width of 769px or above (laptops/desktops), apply
      this rule... */
  @media (min-width: 769px) {
    /* For larger screens (bigger than tablets) we expand the container width. */
    #container {
      width: 720px;
    }
  }
  
  /* For screens that have a width of 520px or below (mobile) apply this rule: */
  @media (max-width: 520px) {
    #container {
      width: auto;
      padding: 0px 20px;
    }
  }
  
  /* ---------- HEADER -------------------------------------------------------- */
  
  /* This element contains our logo image and header text. It is fixed at the
      top of the screen. */
  header {
    /* Set display to flex. Since the header is a flexbox element, and the default
      flow is horizontal, both of its children (logo image and header text) will
      sit on the same line.
    */
    display: flex;
  
    width: inherit; /* Copy the width value from parent element (#container). */
    height: 100px;
  
    /* Set position to "fixed" so that when the user scrolls, the header element
      stays in the same location. */
    position: fixed;
    top: 0px; /* Position this element at the top of the screen. */
  
    /* Vertically center all child elements (the logo image and header text). */
    align-items: center;
  
    /* Choose the same background color as the rest of the page. When user scrolls
      up, the note will be hidden behind this header div. (With no background
      color, the background would be transparent and we would see the note.)
    */
    background-color: #191919;
  }
  
  @media (max-width: 520px) {
    header {
      width: calc(100% - 40px);
    }
  }
  
  /* This rule applies to <h1> elements that are children of <header>. (In other
      words, our "PUI-NOTE" header text.)
  */
  header h1 {
    /* Add a margin so that our header text is not directly next to the logo. */
    margin-left: 5px;
  
    /* Set the font for the header text. First the browser will try to use
      'Roboto Mono'. (This is a font from Google Fonts, which we include in
      index.html.) If 'Roboto Mono' can't be retrieved, the browswer will try
      to 'Courier New'. If that fails, it will use the default monospace font.
    */
    font-family: 'Roboto Mono', 'Courier New', monospace;
    font-size: 18px;
    font-weight: 200; /* Font weights go from 100 (lightest) to 900 (boldest) */
    font-style: italic;
  }
  
  /* This is our yellow logo image (pencil in a box). */
  #logo-img {
    /* By default, our logo image is pretty big! Scale it down to 28x28 px. */
    width: 28px;
    height: 28px;
  }
  
  /* ---------- note ----------------------------------------------------- */
  
  /* This div contains all of our note. */
  #note-list {
  
    /* Our #note-list is a flexbox. This means that by default, the browser
      will try to shove all of the child elements (note) on the same line,
      even if it means shrinking the width of the elements. But! Since we set the
      flex-wrap property to 'wrap', the browser will instead place overflowing
      elements on a new line, which is what we want.
      As a result, for laptop/desktop screens, we will have two note per
      line, tablet-sized screens, we will have one note per line.
    */ 
    display: flex;
    flex-wrap: wrap;
  
    /* Add a margin at the top, so that when the user scrolls to the top of the
      page, the note are note covered up by the header element. */
    margin-top: 100px;
  
    /* Add an extra margin on the bottom, so that when a user scrolls to the
        end of the page, the note are not covered up by the "START A NEW
        NOTE" button.
    */
    margin-bottom: 120px;
  
    /* The following two properties are relevant when there are multiple note
      on each row (larger screens): */
  
    /* All "extra space" in the row should go in-between the note elements (no
      space at the edges of parent div). */
    justify-content: space-between;
  
    /* Within each row, the top of the note should be aligned. (note
      may have different heights when they are expanded.) If we set this
      property to "flex-end" then note would be aligned at the bottom edge.
      If we set to "center", then they would be aligned at the middle. */
    align-items: flex-start;
  }
  
  /*
    (See note.css)
    To keep things organized, the note styles are in a separate file.
  */
  
  
  /* ---------- NOTE EDITOR PANEL --------------------------------------------- */
  
  /*
    (See editor.css)
    To keep things organized, the note editor styles are in a separate file.
  */
  
  
  /* ---------- ICONS (note AND EDITOR) ---------------------------------- */
  
  /* TODO: Add comments */
  .icon {
    width: 30px;
    height: 30px;
    font-size: 30px;
    color: #595959;
  
    cursor: pointer;
    user-select: none;
  }
  
  /* TODO: Add comments */
  .icon:hover {
    color: #dddddd
  }

  #note-editor {

    position: fixed;
  
    bottom: calc(-580px + 80px);
  
    width: inherit;
    height: 580px;
    background-color: #191919;
    border-top: 1px solid #939393;
  
    transition-property: bottom;
    transition-duration: 500ms;    
  }
  
  
  /* TODO: Add comments */
  #note-editor.edit-mode {
    bottom: 0px;
  }
  
  
  /* TODO: Add comments */
  .note-editor-contents {
    margin-top: 20px;
    display: flex;
  }
  
  
  /* TODO: Add comments */
  .note-editor-left {
    width: 350px;
  }
  
  
  /* TODO: Add comments */
  .note-editor-right {
    margin-left: 20px;
    align-self: flex-end;
    display: flex;
    flex-direction: column;
  }
  
  
  /* ---------- "START A NEW NOTE" BUTTON ------------------------------------- */
  
  /* TODO: Add comments */
  #btn-new-note {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 200px;
    height: 60px;
    background-color: #f5bb00;
    border-radius: 30px;
    font-size: 16px;
    font-weight: 500;
    color: #212121;
  
    cursor: pointer;
    user-select: none;
  
    margin: 0 auto;
    position: relative;
    top: -20px;
  }
  
  /* TODO: Add comments */
  #note-editor.edit-mode #btn-new-note {
    pointer-events: none;
  }
  
  /* TODO: Add comments */
  #btn-new-note::before {
    content: "START A NEW NOTE"
  }
  
  /* TODO: Add comments */
  #note-editor.edit-mode #btn-new-note::before {
    content: "EDIT NOTE";
  }
  
  
  /* ---------- CLICKABLE ANIMAL IMAGE ---------------------------------------- */
  
  /* TODO: Add comments */
  .note-editor-img {
    padding: 10px;
    background-color: #212121;
    border-radius: 10px;
    width: 100px;
    height: 100px;
    object-fit: cover;
    cursor: pointer;
  }
  
  
  /* TODO: Add comments */
  .note-editor-img:active {
    background-color: #34242f;
  }
  
  
  /* TODO: Add comments */
  .note-editor-img img {
    border-radius: 5px;
    width: 100%;
    height: 100%;
    object-fit: cover;
    user-select: none;
  }
  
  
  /* ---------- TEXT INPUT AREAS ---------------------------------------------- */
  
  /* TODO: Add comments */
  #note-editor input,textarea {
    margin-top: 14px;
  }
  
  
  /* TODO: Add comments */
  input {
    background-color: #212121;
    border: none;
    padding: 10px;
    border-radius: 10px;
  
    color: #dddddd;
    font-weight: 500;
    font-size: 18px;
    font-family: 'Roboto';
    resize: none;
  
    width: 330px;
    overflow: hidden;
    display: block;
  
  }
  
  
  /* TODO: Add comments */
  input:focus {
    background-color: gold;
    background-color: #34242f;
    /* border: none; */
    outline: none;
  }
  
  
  /* TODO: Add comments */
  textarea {
    background-color: #212121;
    border: none;
    padding: 10px;
    border-radius: 10px;
  
    color: #dddddd;
    font-weight: 500;
    font-size: 18px;
    font-family: 'Roboto';
    resize: none;
  
    width: 330px;
    /* overflow: hidden; */
    font-weight: 400;
    font-size: 14px;
  
  }
  
  
  /* TODO: Add comments */
  textarea:focus {
    background-color: gold;
    background-color: #34242f;
    outline: none;
  }
  
  
  /* ---------- SUBMIT AND CANCEL ICONS --------------------------------------- */
  
  /* TODO: Add comments */
  #note-editor .icon {
    margin-top: 20px;
    font-weight: 600;
  }

  /* This represents a single note. */
.note {

    /* Since this note is a flexbox, the children of the note will sit
      on the same line (instead of stacking on top of each other). This allows
      us to divide the note into a left side (main content + footer) and a
      right side (expand/collapse + toolbar).
    */
    display: flex;
    
    /* Set default width for the note (this will be the width when note
      are all in a single column). For larger screens, we adjust this width, see
      the @media query below. */
    /* width: 450px; */
    width: 100%; 
    
    
    /* Add a margin to the top of the note, so that when they are all stacked
      together, there is a space in between each card. */
    margin-top: 20px;
    
    /* Add some padding, so that there is a buffer zone between the edge of the
      note and the content inside. */
    padding: 20px;
    
    /* Add rounded corners for the note. */
    border-radius: 8px;
    
    /* note background is slightly lighter than the webpage background. */
    background-color: #212121;
  }
    
  /* For larger screen sizes (769px and above) we change the note width. We
    actually make the note a bit smaller, but since we also make the
    #container element larger, there will now be two note per row, instead
    of just one note per row.
  */
  @media (min-width: 769px) {
    .note {
      width: 310px;
    }
  }
  
  /* The right side of the note will contain the expand/collpase icon and the
    toolbar with the edit and delete icons. */
  .note-right{
    /* Make this div a flexbox, so we can more easily position and align the
      child divs. Note that we've set flex-direction to "column", because we
      want the child divs (expand/collpase and toolbar) to stack vertically.
    */
    display: flex;
    flex-direction: column;
  
    /* Set sidebar width to 30px. */
    width: 30px;
  }
  
  /*  The left side of the note will contain the main content and footer. */
  .note-left {
    /* The right side of the note only takes 30px of space. For the left side,
      we set flex-grow to 1, so it will expand and take up the remaining area. */
    flex-grow: 1; 
  }
  
  /* ---------- note LEFT SIDE CONTENTS ----------------------------------- */
  
  
  /* This div contains the note image and note text (title and body). The footer
  is in a separate div. */
  .note-main-content {
    /* This div has two children, "note-thumbnail" and "note-text". By
      default, we would like these child elements to be on the same line, so we
      make the parent element ("note-main-content") a flexbox.
      
      However! For certain screen sizes (two note per row), we would like
      the "note-text" div to be positioned below the "note-thumbnail"
      element (on a a new line). To achieve this, we add the flex-wrap: wrap
      property, and change the width of the "note-text" div with a
      @media query (see note-text style, later in this stylesheet.)
    */
    display: flex;
    flex-wrap: wrap;
  
    /* Set the minimum height for all note content (this is the contracted
      state). If the content expands beyond 75px (for example, when the user
      clicks the "expand" icon), the height will adjust automatically. */
    min-height: 75px;
    }
  
    /* TODO: add comments */
    @media (min-width: 769px) {
    .note-main-content {
      align-content: flex-start;
      min-height: 190px;
    }
  }
  
  
  /* This is the animal image that is displayed on each note. */
  .note-thumbnail {
    /* We want our image to fit into a 70x70 px square. */
    width: 70px;
    height: 70px;
  
    /* Image will be positioned so that it covers the entire 70x70 px area. It
      will be scaled down, but keep the same aspect ratio. Any parts of the image
      that fall outside of the 70x70 area will be clipped. */
    object-fit: cover;
  
    /* Add some rounded corners to the image. */
    border-radius: 5px;
  }
  
  /* For larger screen sizes, we will use a larger animal image (100x100 px). */
  @media (min-width: 769px) {
    .note-thumbnail {
      width: 100px;
      height: 100px;
    }
  }
  
  
  /* This div contains the note title text and note body text. */
  .note-text {
    /* The width should be 100% of the parent div, MINUS the width of the
    70px thumbnail image and the 20px left margin. */
    width: calc(100% - 70px - 20px);
  
    /* Add a margin on the left side, so there is some space between the thumbnail
      image and the note text. */
    margin-left: 20px;
  
    /* Alternatively, we could use the flex-grow property. This causes the div to
      expand so that it takes up the remaining horizontal space in the parent. */
    /* flex-grow: 1; */
  
  }
  
  /* For larger screens, we want the title and body text to be on a new line,
      below the animal image. We set the width to be 100% of the parent div. Then,
      because of the "flex-wrap: wrap" property in the parent
      (.note-main-content), the .note-text div is pushed onto a new line.
  */
  @media (min-width: 769px) {
    .note-text {
      width: 100%;
      margin-left: 0px; /* Remove the left margin. */
    }
  }
  
  
  
  .note-title-container {
    height: 42px;
    margin-top: 5px;
    margin-bottom: 10px;
    display: flex;
  
  }
  @media (min-width: 769px) {
  .note-title-container {
    height: auto;
    margin-top: 20px;
  }
  }
  
  
  .note-title {
  font-weight: 500;
  font-size: 18px;
  
  max-height: 100%;
  
  align-self: flex-end;
  
  
  
  overflow: hidden;
  }
  
  
  
  
  .note-body {
  font-weight: 400;
  font-size: 14px;
  color: #939393;
  
  
  overflow: hidden;
  
  max-height: 16px;
  
  }
  
  .expanded .note-body {
  min-height: 36px;
  max-height: none;
  }
  
  @media (min-width: 769px) {
  .expanded .note-body {
    min-height: 56px;
  }
  }
  
  .note-footer {
  margin-top: 15px;
  font-size: 12px;
  color: #595959
  }
  
  /* ---------- note RIGHT SIDE CONTENTS----------------------------------- */
  
  
  .toolbar {
  flex-grow: 1;
  
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
  }
  
  .note .toolbar .icon {
  display: none;
  }
  
  .note.expanded .toolbar .icon {
  display: block;
  }
  
  .toolbar .icon {
  width: 25px;
  height: 25px;
  font-size: 25px;
  text-align: center;
  margin-top: 10px;
  vertical-align: middle;
  }
  
  .icon-collapse {
  display: none;
  }
  
  .note.expanded .icon-collapse {
  display: block;
  }
  
  .note.expanded .icon-expand {
  display: none;
  }
  
  
  .btn-expand-collapse {
    width: 30px;
    height: 30px;
    color: red;
    cursor: pointer;
    user-select: none;
  }
  
  .btn-expand-collapse:hover {
    background-color: green;
    color: #dddddd
  }